require('dotenv').config();
const { Telegraf, Markup } = require('telegraf')
const axios = require('axios');

const bot = new Telegraf(process.env.TELEGRAM_TOKEN, {})
bot.start((ctx) => {
    try {
        ctx.replyWithHTML(`<b>–ü—Ä–∏–≤–µ—Ç, ${ctx.message.chat.first_name} üëãüëã</b>\n\n–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.`)
    } catch (e) { }
})

bot.on('sticker', (ctx) => ctx.reply('üëç'))
// bot.command('w', Telegraf.reply('Œª'))

bot.command('/comands', async (ctx) => {
    try {
        ctx.replyWithHTML(`–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–ª–µ–¥—É—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:`)
        ctx.replyWithHTML(`<b>/w - –ø–æ–≥–æ–¥–∞</b>`)
    } catch (e) {
        console.log(e)
    }
})

// bot.on('message', async (ctx) => {
bot.command('w', async (ctx) => {
    let location = 'Izhevsk'
    try {
        var weather_data = (await axios.get(`${process.env.WEATHER_SERVICE_API_URL}${location}`)).data
        if (weather_data.error === null && weather_data.result.length !== 0) {
            var data = weather_data.result[0]
            // ctx.replyWithHTML(`–°–µ–≥–æ–¥–Ω—è –≤ –ò–∂–µ–≤—Å–∫–µ <b><u>${data.location.name}</u></b>\n\n<b>${data.current.skytext}</b>\n\nCurrent Temperature: <b>${data.current.temperature} ¬∞C</b>\nFeels like: <b>${data.current.feelslike} ¬∞C</b>\nHumidity : <b>${data.current.humidity} %</b><em>\n\nBrought you by @t_projects</em>`);
            ctx.replyWithHTML(`–°–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –≤ <b>–ò–∂–µ–≤—Å–∫–µ</b>\n\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <b>${data.current.temperature} ¬∞C</b>\n–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: <b>${data.current.feelslike} ¬∞C</b>`);
        } else {
            ctx.reply("–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
        }
    } catch (e) { console.log(e) }
})


bot.launch()

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))